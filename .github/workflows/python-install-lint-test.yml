name: Reusable CI python install and test workflow
on:
  workflow_call:
    inputs:
      os:
        description: "Operating system to run this workflow on. Should match a valid Github runner name"
        required: true
        type: string
      py3version:
        description: "Minor version of Python version 3 to run the test on (e.g. `11` for python v3.11)"
        required: true
        type: string
      env_name:
        description: "Name of the Conda environment. If it matches a name of a cached environment in the caller repository, that cache will be used."
        required: false
        default: ""
        type: string
      additional_env_create_args:
        description: "Any additional arguments to pass to conda when creating the python environment"
        required: false
        default: ""
        type: string
      cache_env:
        description: "If true, cache the conda environment for speedier CI"
        required: false
        default: true
        type: boolean
      notebook_kernel:
        description: "If jupyter notebooks are included in the docs, specify the kernel name they expect, e.g. the package name"
        required: false
        type: string
      lint:
        description: "If true, check code quality with the Ruff linter"
        required: false
        default: true
        type: boolean
      pytest_args:
        description: "Additional arguments to pass to pytest"
        required: false
        type: string
        default: ""
      upload_to_codecov:
        description: "If true, upload coverage report to codecov. This assumes your repository is public as it does not expect an API key."
        required: false
        default: true
        type: boolean

defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    runs-on: ${{ inputs.os }}
    steps:
    - name: Use supplied conda environment name
      if: inputs.env_name != ''
      run: echo "ENVNAME=${{ inputs.env_name }}" >> $GITHUB_ENV

    - name: Create conda environment name based on OS and python version
      if: inputs.env_name == ''
      run: echo "ENVNAME=${{ inputs.os }}-3${{ inputs.py3version }}" >> $GITHUB_ENV

    - uses: arup-group/actions-city-modelling-lab/.github/actions/create-conda-env@v1.1.0
      with:
        py3version: ${{ inputs.py3version }}
        env_name: ${{ env.ENVNAME }}
        additional_env_create_args: ${{ inputs.additional_env_create_args }}
        cache_env: "${{ inputs.cache_env }}"

    - name: Install jupyter kernel
      if: inputs.notebook_kernel != ''
      run: python -m ipykernel install --user --name ${{ inputs.notebook_kernel }}

    - name: Lint with Ruff
      if: inputs.lint
      run: ruff check .

    - name: run tests
      run: pytest ${{ inputs.pytest_args }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      if: inputs.upload_to_codecov
      env:
        directory: "./reports/coverage/"
