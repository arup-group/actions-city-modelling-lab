name: Reusable Python memory profiler
on:
  workflow_call:
    inputs:
      py3version:
        description: "Minor version of Python version 3 to run the test on (e.g. `11` for python v3.11)"
        required: true
        type: string
      additional_env_create_args:
        description: "Any additional arguments to pass to conda when creating the python environment"
        required: false
        default: ""
        type: string
      upload_flamegraph:
        description: "If True, upload the memory profiling flamegraph as an action artefact"
        required: false
        default: false
        type: boolean

defaults:
  run:
    shell: bash -l {0}

jobs:
  memory-profiler:
    runs-on: ubuntu-latest
    steps:
      - uses: arup-group/actions-city-modelling-lab/.github/actions/create-conda-env@update-setup-miniconda
        with:
          py3version: ${{ inputs.py3version }}
          env_name: profiling
          additional_env_create_args:
            memray=1
            pytest-memray=1
            ${{ inputs.additional_env_create_args }}
          cache_env: "true"

      - name: Run memory and time profiling test
        run: |
          mkdir $HOME/flamegraphs;
          pytest tests/ -p memray -m "high_mem" --no-cov --memray-bin-path=$HOME/flamegraphs --memray-bin-prefix=${{ github.sha }}

      - name: Produce flamegraph
        if: inputs.upload_flamegraph == true
        run: for binfile in $HOME/flamegraphs/*.bin; do memray flamegraph $binfile; done

      - name: Upload flamegraph(s)
        if: inputs.upload_flamegraph == true
        uses: actions/upload-artifact@v4
        with:
          name: memory-profiling-flamegraphs
          path: ~/flamegraphs/*.html
          if-no-files-found: error
