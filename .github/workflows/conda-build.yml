name: Reusable conda package builder

on:
  workflow_call:
    inputs:
      package_name:
        description: "Name of Python package name being built"
        required: true
        type: string
      recipe_dir:
        description: "Directory in which to find the recipe (i.e. config) for building the package"
        required: false
        type: string
        default: "conda.recipe"
      version:
        description: "Version to be packaged and uploaded"
        required: false
        type: string
        default: ${{ github.ref_name }}
      environment:
        description: "GitHub environment in which secrets are stored"
        type: string
        default: "release"
      destination:
        description: "Upload packaging index destination. Must be one of [anaconda, internal]."
        type: string
        default: anaconda
    secrets:
      ANACONDA_TOKEN:
        required: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  n-builds:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-arch.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: assert whether the build is noarch or not
        id: get-arch
        run: |
          if grep -Fq "noarch:" ${{ inputs.recipe_dir }}/meta.yaml
          then
            echo "matrix={\"os\":[\"ubuntu-latest\"]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"os\":[\"ubuntu-latest\", \"macos-latest\", \"windows-latest\"]}" >> $GITHUB_OUTPUT
          fi

  token-exists:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: inputs.destination == 'anaconda'
    steps:
    - name: check if ANACONDA_TOKEN exists
      env:
        # cannot use secrets directly in conditionals
        # see https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions#using-secrets-in-a-workflow
        anaconda_token: ${{ secrets.ANACONDA_TOKEN }}
      if: env.anaconda_token == ''
      run: |
        echo "the secret \"ANACONDA_TOKEN\" is not available, so the conda package cannot be published on release."
        echo "Please go to \"settings \> secrets \> actions\" to create it before trying to build the conda package."
        exit 1

  conda-build:
    runs-on: ${{ matrix.os }}
    environment: ${{ inputs.environment }}
    needs: [n-builds, token-exists]
    strategy:
      matrix: ${{ fromJson(needs.n-builds.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v2
      with:
        micromamba-version: '1.5.10-0'
        environment-name: condabuild
        create-args: >-
          python=3.11
          boa
          conda-verify
        post-cleanup: all
        cache-environment: true

    - name: Add conda channel
      run: conda config --add channels city-modelling-lab

    - name: Add internal conda channel
      if: inputs.destination == 'internal'
      run: conda config --add channels https://packages.arup.com/conda

    - name: Build conda package
      run: conda mambabuild ${{ inputs.recipe_dir }}

    - name: Get version without the v
      run: |
        TAG=${{ inputs.version }}
        echo "VERSION=${TAG#v}" >> $GITHUB_ENV

    - name: Test installing built conda package
      run: |
        micromamba install -c local ${{ inputs.package_name }}
        INSTALLED=$(micromamba list ${{ inputs.package_name }})
        echo $INSTALLED
        echo "$INSTALLED" | grep "${{ env.VERSION }}" -Fq

    - name: Upload built conda package ready for upload on release
      uses: actions/upload-artifact@v4
      with:
        name: conda-build-${{ matrix.os }}-${{ inputs.package_name }}-${{ inputs.version }}
        path: ${{ env.MAMBA_ROOT_PREFIX }}/envs/condabuild/conda-bld/
        retention-days: 3
        if-no-files-found: error
