name: "Create a mamba environment"
inputs:
  py3version:
    description: "Minor version of Python version 3 to run the test on (e.g. `11` for python v3.11)"
    required: true
    type: string
  env_name:
    description: "Name of the Mamba environment. If it matches a name of a cached environment in the caller repository, that cache will be used."
    required: true
    type: string
  additional_mamba_args:
    description: "Any additional arguments to pass to micromamba when creating the python environment"
    required: false
    default: ""
    type: string
  cache_mamba_env:
    description: "If true, cache the mamba environment for speedier CI"
    required: false
    default: true
    type: boolean
  cache_refresh_time_format:
    description: >-
      The time format to extract from the current date with which a cache refresh will be forced even if nothing has changed in the environment name.
      E.g. '+%Y%m' forces a cache reset every month.
      Format options are '%Y' (year), '%m' (month) and '%d' (day).
    required: false
    default: "+%Y%m"
    type: string
runs:
  using: "composite" #
  steps:
    - uses: actions/checkout@v4

    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: ${{ inputs.env_name }}
        use-mamba: true
        python-version: 3.${{ inputs.py3version }}

    - name: Get Date
      id: get-refresh-timestamp
      run: echo "timestamp=$(/bin/date -u ${{ inputs.cache_refresh_time_format }})" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Mamba env
      id: cache
      if: ${{ inputs.cache_mamba_env }} == true
      uses: actions/cache@v3
      with:
        path: ${{ env.CONDA }}/envs
        key: ${{ steps.get-refresh-timestamp.outputs.timestamp }}-${{ inputs.env_name }}

    - name: Update environment
      run:
        mamba env update -n ${{ inputs.env_name }}
        ${{ inputs.additional_mamba_args }}
        -f requirements/base.txt
        -f requirements/dev.txt
        -c city-modelling-lab
        ruff
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Install package
      run: pip install --no-dependencies -e .