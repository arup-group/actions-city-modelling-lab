name: "Create a mamba environment"
description: "Steps to create mamba environment with all required dependencies and the project itself installed (via pip)."
inputs:
  py3version:
    description: "Minor version of Python version 3 to run the test on (e.g. `11` for python v3.11)"
    required: true
  env_name:
    description: "Name of the Mamba environment. If it matches a name of a cached environment in the caller repository, that cache will be used."
    required: true
  additional_mamba_args:
    description: "Any additional arguments to pass to micromamba when creating the python environment"
    required: false
    default: ""
  cache_mamba_env:
    description: "If true, cache the mamba environment for speedier CI"
    required: false
    default: "true"
  cache_refresh_time_format:
    description: >-
      The time format to extract from the current date with which a cache refresh will be forced even if nothing has changed in the environment name.
      E.g. '+%Y%m' forces a cache reset every month.
      Format options are '%Y' (year), '%m' (month) and '%d' (day).
    required: false
    default: "+%Y%m"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Get hash for environment name
      id: get-env-hash
      run: echo "hash=${{ inputs.env_name }}-${{ hashFiles('requirements/**.txt') }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get Date
      id: get-refresh-timestamp
      run: echo "timestamp=$(/bin/date -u ${{ inputs.cache_refresh_time_format }})" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Mamba env
      id: cache
      if: inputs.cache_mamba_env == 'true'
      uses: actions/cache@v4
      with:
        path: conda-env.lock
        key: ${{ steps.get-refresh-timestamp.outputs.timestamp }}-${{ steps.get-env-hash.outputs.hash }}

    - name: Set up Miniforge with empty environment
      if: steps.cache.outputs.cache-hit != 'true'
      uses: conda-incubator/setup-miniconda@v3.1.1
      with:
        miniforge-version: latest
        activate-environment: ${{ steps.get-env-hash.outputs.hash }}
        use-mamba: true

    - name: Install dependencies into empty environment
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash -el {0}
      run:
        mamba create
        --yes
        -c city-modelling-lab
        -n ${{ steps.get-env-hash.outputs.hash }}
        ruff
        python=3.${{ inputs.py3version }}
        ${{ inputs.additional_mamba_args }}
        --file requirements/base.txt
        --file requirements/dev.txt

    - name: Set up Miniforge with lockfile
      if: steps.cache.outputs.cache-hit == 'true'
      uses: conda-incubator/setup-miniconda@v3.1.1
      with:
        miniforge-version: latest
        activate-environment: ${{ steps.get-env-hash.outputs.hash }}
        environment-file: conda-env.lock
        use-mamba: true

    - name: Install package
      shell: bash -el {0}
      run: pip install --no-dependencies -e .

    - name: Create lockfile
      if: steps.cache.outputs.cache-hit != 'true'
      run: mamba list --explicit > conda-env.lock
      shell: bash -el {0}
